prototype(DIU.Grid:Components.Molecule.Grid.Column.Six) < prototype(Neos.Fusion:Component) {

    #
    # Styleguide annotation
    # if this annotation is present (even when empty)
    # the prototype is rendered in the styleguide
    #
    @styleguide {

        title = '6 Column Grid'

        description = 'A six column grid which has the posibility to add a fixed spacing above and below.'

        @propTypes {
            column0 = ${PropTypes.string.isRequired}
            column1 = ${PropTypes.string.isRequired}
            column2 = ${PropTypes.string.isRequired}
            column3 = ${PropTypes.string.isRequired}
            column4 = ${PropTypes.string.isRequired}
            column5 = ${PropTypes.string.isRequired}
            layout = ${PropTypes.string.isRequired}
            classNames = ${PropTypes.string}
            addTopSpacing = ${PropTypes.boolean}
            addBottomSpacing = ${PropTypes.boolean}
        }

        props {
            column0 = '<h2 style="padding:5px;background-color:white;">Column 1 content</h2>'
            column1 = '<h2 style="padding:5px;background-color:white;">Column 2 content</h2>'
            column2 = '<h2 style="padding:5px;background-color:white;">Column 3 content</h2>'
            column3 = '<h2 style="padding:5px;background-color:white;">Column 4 content</h2>'
            column4 = '<h2 style="padding:5px;background-color:white;">Column 5 content</h2>'
            column5 = '<h2 style="padding:5px;background-color:white;">Column 6 content</h2>'
            layout = '2-2-2-2-2-2'
            classNames = ''
            addTopSpacing = false
            addBottomSpacing = false
        }

        propSets {
            'Top and Buttom Spacing' {
                addTopSpacing = true
                addBottomSpacing = true
            }
        }
    }

    layout = null
    column0 = null
    column1 = null
    column2 = null
    column3 = null
    column4 = null
    column5 = null
    classNames = ''
    addTopSpacing = false
    addBottomSpacing = false
    columnWidth0 = ''
    columnWidth1 = ''
    columnWidth2 = ''
    columnWidth3 = ''
    columnWidth4 = ''
    columnWidth5 = ''
    color0 = ''
    color1 = ''
    color2 = ''
    color3 = ''
    color4 = ''
    color5 = ''
    bgImagePath0 = ''
    bgImagePath1 = ''
    bgImagePath2 = ''
    bgImagePath3 = ''
    bgImagePath4 = ''
    bgImagePath5 = ''

    #
    # The code afx`...` is converted to the fusion code below at parse time.
    # Attention: Currently there is no way to escape closing-backticks inside the Expression.
    #

    renderer = Neos.Fusion:Component {
        classNames = ${props.classNames}
        column0 = DIU.Grid:Components.Atom.Column {
            content = ${props.column0}
            classNames = ${props.columnWidth0 + ' ' + props.color0}
            bgImage = ${props.bgImagePath0}
        }
        column1 = DIU.Grid:Components.Atom.Column {
            content = ${props.column1}
            classNames = ${props.columnWidth1 + ' ' + props.color1}
            bgImage = ${props.bgImagePath1}
        }
        column2 = DIU.Grid:Components.Atom.Column {
            content = ${props.column2}
            classNames = ${props.columnWidth2 + ' ' + props.color2}
            bgImage = ${props.bgImagePath2}
        }
        column3 = DIU.Grid:Components.Atom.Column {
            content = ${props.column3}
            classNames = ${props.columnWidth3 + ' ' + props.color3}
            bgImage = ${props.bgImagePath3}
        }
        column4 = DIU.Grid:Components.Atom.Column {
            content = ${props.column4}
            classNames = ${props.columnWidth4 + ' ' + props.color4}
            bgImage = ${props.bgImagePath4}
        }
        column5 = DIU.Grid:Components.Atom.Column {
            content = ${props.column5}
            classNames = ${props.columnWidth5 + ' ' + props.color5}
            bgImage = ${props.bgImagePath5}
        }
        renderer = afx`
            <div class={'row molecule-grid molecule-grid-column-one' + (props.classNames ? ' ' + props.classNames : '')}>
                {props.column0}
                {props.column1}
                {props.column2}
                {props.column3}
                {props.column4}
                {props.column5}
            </div>
        `
    }
}
