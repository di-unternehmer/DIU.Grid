prototype(DIU.Grid:Content.Structure.Section) < prototype(DIU.Grid:Content.ContentCollection) {

    renderer = DIU.Grid:Components.Atom.Section {

        fluidLayout = ${q(node).property('fluidLayout') ? '-fluid' : ''}

        classNames = Neos.Fusion:Join {
            @glue = ' '
            addTopSpacingMobile = ${q(node).property('addTopSpacingMobile') ? q(node).property('addTopSpacingMobile') : ''}
            addTopSpacingTablet = ${q(node).property('addTopSpacingTablet') ? q(node).property('addTopSpacingTablet') : ''}
            addTopSpacingDesktop = ${q(node).property('addTopSpacingDesktop') ? q(node).property('addTopSpacingDesktop') : ''}
            addBottomSpacingMobile = ${q(node).property('addBottomSpacingMobile') ? q(node).property('addBottomSpacingMobile') : ''}
            addBottomSpacingTablet = ${q(node).property('addBottomSpacingTablet') ? q(node).property('addBottomSpacingTablet') : ''}
            addBottomSpacingDesktop = ${q(node).property('addBottomSpacingDesktop') ? q(node).property('addBottomSpacingDesktop') : ''}
            theme = ${q(node).property('theme') ? q(node).property('theme') : ''}
        }
        classNames.@process.trim = ${String.trim(value)}

        offset = ${q(node).property('offset')}



        /*content = Neos.Neos:PrimaryContent {
            nodePath = 'section'
        }*/
    }
}
